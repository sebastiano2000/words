{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp-win10\\\\Desktop\\\\task\\\\client\\\\src\\\\components\\\\words\\\\Words.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport \"./Words.css\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Question = () => {\n  _s();\n\n  // declaration\n  let initialSeconds = 15; //time for question\n\n  const Navigator = useNavigate();\n  const {\n    questions,\n    setProgressBar,\n    progressBar\n  } = useContext(GlobalContext); // fetch data[questions] from context\n\n  const [alert, setAlert] = useState(false); // alert to make questuion required \n\n  const [answer, setAnswer] = useState(null);\n  const [question, setQuestion] = useState({});\n  const [id, setId] = useState(1);\n  const [seconds, setSeconds] = useState(initialSeconds);\n  const [btnContent, setBtnContent] = useState(\"Next\"); // methods\n\n  /* get question according id */\n\n  useEffect(() => {\n    if (id <= 10) {\n      let selectedQuestion = questions.find(item => item.id === id);\n      setQuestion(selectedQuestion);\n      setAlert(false);\n      setSeconds(initialSeconds);\n      setProgressBar(progressBar + 1);\n    } else {\n      // questions finished\n      Navigator(\"/questions/result\");\n    }\n  }, [id]);\n  /* make question timer */\n\n  useEffect(() => {\n    var timer = setInterval(() => {\n      if (seconds > 0) {\n        setSeconds(seconds - 1);\n      } else {\n        clearInterval(timer);\n      }\n\n      if (seconds === 0) {\n        //move to next\n        goToNext();\n      }\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, [seconds]);\n  /*\r\n   * method:setScore\r\n   * function:set Score for question according answer\r\n   */\n\n  const setScore = () => {\n    questions.map(item => {\n      if (item.id === id) {\n        if (answer === item.pos) {\n          item.score = 10;\n        } else {\n          item.score = 0;\n        }\n\n        item.choose = answer ? answer : question.choose;\n      }\n    });\n  };\n  /*\r\n   * method:goToNext\r\n   * function:move to next question\r\n   */\n\n\n  const goToNext = () => {\n    if ((answer === null || answer.trim() === \"\") && seconds !== 0) {\n      setAlert(true);\n    } else {\n      setScore();\n      setId(id + 1);\n\n      if (id === 10) {\n        setSeconds(-1); //clearInterval(timer);\n      }\n\n      if (id == 9) {\n        //next question is the last question\n        setBtnContent(\"Submit\");\n      }\n    }\n  }; //return view\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questionCard\",\n    children: [alert && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"alert\",\n      children: \" required! please answer the question \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"myForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: question.word ? question.word : \"loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [seconds >= 0 ? seconds : 0, \" sec\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"radio\",\n        id: \"adjective\",\n        name: \"questionId\",\n        onClick: () => {\n          setAnswer(\"adjective\");\n          setAlert(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"adjective\",\n        children: \"adjective\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"adverb\",\n        name: \"questionId\",\n        onClick: () => {\n          setAnswer(\"adverb\");\n          setAlert(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"adverb\",\n        children: \"adverb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"noun\",\n        name: \"questionId\",\n        value: \"noun\",\n        onClick: () => {\n          setAnswer(\"noun\");\n          setAlert(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"noun\",\n        children: \"noun\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"verb\",\n        name: \"questionId\",\n        value: \"verb\",\n        onClick: () => {\n          setAnswer(\"verb\");\n          setAlert(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"verb\",\n        children: \"verb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quizzPageFooter\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNext,\n        children: btnContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Question, \"rJF3NaEVChkRtGsreUT5U2QKafg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","useContext","useEffect","GlobalContext","useNavigate","Question","initialSeconds","Navigator","questions","setProgressBar","progressBar","alert","setAlert","answer","setAnswer","question","setQuestion","id","setId","seconds","setSeconds","btnContent","setBtnContent","selectedQuestion","find","item","timer","setInterval","clearInterval","goToNext","setScore","map","pos","score","choose","trim","word"],"sources":["C:/Users/hp-win10/Desktop/task/client/src/components/words/Words.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalContext\";\r\nimport \"./Words.css\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst Question = () => {\r\n  // declaration\r\n  let initialSeconds = 15;//time for question\r\n  const Navigator = useNavigate();\r\n  const { questions, setProgressBar, progressBar } = useContext(GlobalContext); // fetch data[questions] from context\r\n  const [alert, setAlert] = useState(false); // alert to make questuion required \r\n  const [answer, setAnswer] = useState(null);\r\n  const [question, setQuestion] = useState({});\r\n  const [id, setId] = useState(1);\r\n  const [seconds, setSeconds] = useState(initialSeconds);\r\n  const [btnContent, setBtnContent] = useState(\"Next\");\r\n\r\n  // methods\r\n  /* get question according id */\r\n  useEffect(() => {\r\n    if (id <= 10) {\r\n      let selectedQuestion = questions.find((item) => item.id === id);\r\n      setQuestion(selectedQuestion);\r\n      setAlert(false);\r\n      setSeconds(initialSeconds);\r\n      setProgressBar(progressBar + 1);\r\n    } else {\r\n      // questions finished\r\n      Navigator(\"/questions/result\");\r\n    }\r\n  }, [id]);\r\n\r\n\r\n  /* make question timer */\r\n  useEffect(() => {\r\n    var timer = setInterval(() => {\r\n      if (seconds > 0) {\r\n        setSeconds(seconds - 1);\r\n      } else {\r\n        clearInterval(timer);\r\n      }\r\n      if (seconds === 0) {\r\n        //move to next\r\n        goToNext();\r\n      }\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [seconds]);\r\n\r\n\r\n  /*\r\n   * method:setScore\r\n   * function:set Score for question according answer\r\n   */\r\n  const setScore = () => {\r\n    questions.map((item) => {\r\n      if (item.id === id) {\r\n        if (answer === item.pos) {\r\n          item.score = 10;\r\n        } else {\r\n          item.score = 0;\r\n        }\r\n        item.choose = answer ? answer : question.choose;\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  /*\r\n   * method:goToNext\r\n   * function:move to next question\r\n   */\r\n  const goToNext = () => {\r\n    if ((answer === null || answer.trim() === \"\") && seconds !== 0) {\r\n      setAlert(true);\r\n    } else {\r\n      setScore();\r\n      setId(id + 1);\r\n      if (id === 10) {\r\n        setSeconds(-1); //clearInterval(timer);\r\n      }\r\n      if (id == 9) {\r\n        //next question is the last question\r\n        setBtnContent(\"Submit\");\r\n      }\r\n    }\r\n  };\r\n\r\n  //return view\r\n  return (\r\n    <div className=\"questionCard\">\r\n      {alert && <p className=\"alert\"> required! please answer the question </p>}\r\n      <form id=\"myForm\">\r\n        <p>\r\n          <span>{question.word ? question.word : \"loading\"}</span>\r\n          <span>{seconds >= 0 ? seconds : 0} sec</span>\r\n        </p>\r\n        <input\r\n          required\r\n          type=\"radio\"\r\n          id=\"adjective\"\r\n          name=\"questionId\"\r\n          onClick={() => {\r\n            setAnswer(\"adjective\");\r\n            setAlert(false);\r\n          }}\r\n        />\r\n        <label htmlFor=\"adjective\">adjective</label>\r\n        <br />\r\n        <input\r\n          type=\"radio\"\r\n          id=\"adverb\"\r\n          name=\"questionId\"\r\n          onClick={() => {\r\n            setAnswer(\"adverb\");\r\n            setAlert(false);\r\n          }}\r\n        />\r\n        <label htmlFor=\"adverb\">adverb</label>\r\n        <br />\r\n        <input\r\n          type=\"radio\"\r\n          id=\"noun\"\r\n          name=\"questionId\"\r\n          value=\"noun\"\r\n          onClick={() => {\r\n            setAnswer(\"noun\");\r\n            setAlert(false);\r\n          }}\r\n        />\r\n        <label htmlFor=\"noun\">noun</label>\r\n        <br />\r\n        <input\r\n          type=\"radio\"\r\n          id=\"verb\"\r\n          name=\"questionId\"\r\n          value=\"verb\"\r\n          onClick={() => {\r\n            setAnswer(\"verb\");\r\n            setAlert(false);\r\n          }}\r\n        />\r\n        <label htmlFor=\"verb\">verb</label>\r\n        <br />\r\n      </form>\r\n      <div className=\"quizzPageFooter\">\r\n        <button onClick={goToNext}>{btnContent}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;"],"mappings":"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"},"metadata":{},"sourceType":"module"}